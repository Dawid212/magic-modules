obj = make(map[string]interface{})

zone, err := tpgresource.GetZone(d, config)
if err != nil {
	return err
}
if zone == "" {
	return fmt.Errorf("zone must be non-empty - set in resource or at provider-level")
}

region := tpgresource.GetRegionFromZone(zone)
if region == "" {
	return fmt.Errorf("invalid zone %q, unable to infer region from zone", zone)
}

project, err = tpgresource.GetProject(d, config)
if err != nil {
	return err
}

if v, ok := d.GetOk("name"); ok && !tpgresource.IsEmptyValue(reflect.ValueOf(v)) {
	obj["resourcePolicies"] = []interface{}{
		fmt.Sprintf("projects/%s/regions/%s/resourcePolicies/%s", project, region, v.(string)),
	}
}

return nil
